basePath: /api
definitions:
  model.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  model.Person:
    properties:
      age:
        type: integer
      created_at:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
      updated_at:
        type: string
    type: object
host: 0.0.0.0:8080
info:
  contact: {}
  description: This is an API for managing persons.
  title: Effective Mobile API
  version: "1.0"
paths:
  /persons:
    get:
      consumes:
      - application/json
      description: Get list of persons with optional filters
      parameters:
      - description: Name
        in: query
        name: name
        type: string
      - description: Surname
        in: query
        name: surname
        type: string
      - description: Patronymic
        in: query
        name: patronymic
        type: string
      - description: Age
        in: query
        name: age
        type: integer
      - description: Gender (male or female)
        in: query
        name: gender
        type: string
      - description: Nationality
        in: query
        name: nationality
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Person'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get persons with filters
      tags:
      - persons
    post:
      consumes:
      - application/json
      description: Add a new person to the database
      parameters:
      - description: Person info
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/model.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Create a new person
      tags:
      - persons
  /persons/{id}:
    delete:
      consumes:
      - application/json
      description: Delete person from the database by ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Delete person by ID
      tags:
      - persons
    get:
      consumes:
      - application/json
      description: Get detailed information about a person by ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Person'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get person by ID
      tags:
      - persons
    put:
      consumes:
      - application/json
      description: Update person's information by ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated person info
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/model.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Update person by ID
      tags:
      - persons
swagger: "2.0"
