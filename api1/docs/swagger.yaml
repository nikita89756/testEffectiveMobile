basePath: /api
definitions:
  model.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  model.IdResponse:
    properties:
      id:
        type: integer
    type: object
  model.Person:
    properties:
      age:
        type: integer
      created_at:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
      updated_at:
        type: string
    type: object
  model.PersonCreateRequest:
    properties:
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  model.PersonUpdateRequest:
    properties:
      age:
        type: integer
      gender:
        type: string
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
host: 0.0.0.0:8080
info:
  contact: {}
  title: Effective Mobile API
  version: "1.0"
paths:
  /persons:
    get:
      consumes:
      - application/json
      description: Возвращает список человек учитывая фильтры
      parameters:
      - description: Name
        in: query
        name: name
        type: string
      - description: Surname
        in: query
        name: surname
        type: string
      - description: Patronymic
        in: query
        name: patronymic
        type: string
      - description: Age
        in: query
        name: age
        type: integer
      - description: Gender (male or female)
        in: query
        name: gender
        type: string
      - description: Nationality
        in: query
        name: nationality
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Person'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Получить список человек
      tags:
      - persons
    post:
      consumes:
      - application/json
      description: Добавление и обогащение данными ФИО.
      parameters:
      - description: Person info
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/model.PersonCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.IdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Создает нового пользователя.
      tags:
      - persons
  /persons/{id}:
    delete:
      consumes:
      - application/json
      description: Удаление человека из базы данных по ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Удаление человека
      tags:
      - persons
    get:
      consumes:
      - application/json
      description: Получение подробныйх данных о человеке по ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Person'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Получение данных о человеке по ID
      tags:
      - persons
    put:
      consumes:
      - application/json
      description: Обновение данных о человеке по ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated person info
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/model.PersonUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Обновление данных о человеке
      tags:
      - persons
swagger: "2.0"
